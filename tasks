# задание 1: посмотреть содержимое директорий /ect, /proc, /home
ls /etc
ls /proc
ls /home

#посмотреть пару произвольных файлов в /etc
less /etc/sudo.conf
less /etc/rsyslog.conf
# задание 2 Выяснить, для чего предназначена команда cat. Используя данную команду, создать два файла с данными, а затем объединить их. Просмотреть содержимое созданного файла. Переименовать файл, дав ему новое имя.
man cat
#создание файлов (через cat не создаются, можно тачем или сразу вимом)
vim file1
vim file2

#объединяем файлы
cat file1 file2 > joined_file

#переименовываем файл
mv joined_file united_file

#Задание 3. Создать несколько файлов. Создать директорию, переместить файл туда. Удалить все созданные в этом и предыдущем задании директории и файлы.
touch file{00..10}
mkdir dir_for_files
mv file* ./dir_for_files
rm -r ./dir_for_files

#задание 4 .В ОС Linux скрытыми файлами считаются те, имена которых начинаются с символа “.”. Сколько скрытых файлов в вашем домашнем каталоге? (Использовать конвейер. Подсказка: для подсчета количества строк можно использовать wc.)


ls -ld .* | grep ^- | wc -l

#сначала нашел все файлы и директории, которые начинаются с ., потом оставил только файлы и отправил на подсчет
#
#задание 5. Попробовать вывести с помощью cat содержимое всех файлов в директории /etc. Направить ошибки в отдельный файл в вашей домашней директории. Сколько файлов, которые не удалось посмотреть, оказалось в списке?
#чтобы отобрать для КАТ только файлы использовал find 
cat `find /etc/* -maxdepth 1 -type f` 2>error
# отправляю файл error на подсчет
wc -l < ./error

#Задание 6 Запустить в одном терминале программу, а в другом терминале посмотреть PID процесса и остановить с помощью kill, посылая разные типы сигналов. Что происходит?
#в одном терминале запускаю
vim task6
#в другом терминале сначала смотрю номер процесса через 
ps aux | grep vim

maxim      25997  0.0  0.4  19040 10096 pts/0    S+   06:58   0:00 vim tasks
maxim      26032  0.0  0.4  19052 10148 pts/1    S+   07:01   0:00 vim ./hw2/task6
maxim      26036  0.0  0.1   5632  3188 pts/0    S+   07:02   0:00 /bin/bash -c (ps aux | grep vim)>/tmp/vGUJv1V/0 2>&1
maxim      26037  0.0  0.0   5632   240 pts/0    S+   07:02   0:00 /bin/bash -c (ps aux | grep vim)>/tmp/vGUJv1V/0 2>&1
maxim      26039  0.0  0.0   5172   884 pts/0    S+   07:02   0:00 grep vim
#когда выводит номер процесса
kill -9 26032
#различные типы сигналов выводят разные ошибки при завершении программы, и по разному записываются в системный журнал

#Задание 7 Отобразить в /dev список устройств, которые в настоящее время используются вашим UID (для этого используется команда lsof). Организовать конвейер через less, чтобы посмотреть их должным образом.
lsof -x +D /dev | less
#ключ x нужен, чтобы расшифровать симлинки (по умолчанию система их игнорит), ключ Д позволяет указать директорию где смотреть файлы
#
#Задание 8. * Cоздать директорию для хранения фотографий. В ней должны быть директории по годам (например, за последние 5 лет), и в каждой директории года — по директории для каждого месяца.

mkdir -p {2015..2020}/{01..12}

#Задание 9. * Заполнить директории файлами вида ГГГГММДДНН.txt. Внутри файла должно быть его имя. Например: 2018011301.txt, 2018011302.txt.
#
for i in {2015..2020}; 
do 
	for j in {01..12}; 
	do 
		for n in {01..30}; 
		do 
			touch ./calen/$i/$j/$i$j$n.txt; 
		done; 
	done; 
done

#Задание 10. Использовать команду cut на вывод длинного списка каталога, чтобы отобразить только права доступа к файлам. 
#		Затем отправить в конвейере этот вывод на sort и uniq, чтобы отфильтровать все повторяющиеся строки. 
#			Потом с помощью wc подсчитать различные типы разрешений в этом каталоге. 
#				Самостоятельно решить задачу, как сделать так, чтобы в подсчет не добавлялись строка «Итого» и файлы . и .. (ссылки на текущую и родительскую директории).

#
ls -la | tail -n +4 | cut -c 1-10 | sort | uniq | wc -l
